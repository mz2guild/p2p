name: Compatibility Checker

concurrency:
  group: ${{ github.workflow }}

on:
  schedule:
    - cron: "0 6 * * *" # UTC timing is every day at 10pm PST
  workflow_dispatch:
    inputs:
      verbose:
        type: boolean
        required: false
        description: "Run with verbose logging"
        default: false

jobs:
  genesis-sync-test:
    strategy:
      matrix:
        shard_manifest: [
            # we need shards to overlap by one epoch for full coverage, as snapshot N
            # does not start at the beginning of epoch N, but rather at the end of
            # epoch N, and immediately reconfigures to N+1.
            {
              hostname: "fullnode-compat-test-01",
              start_epoch: 0,
              end_epoch: 749,
            },
            {
              hostname: "fullnode-compat-test-02",
              start_epoch: 748,
              end_epoch: 754,
            },
            {
              hostname: "fullnode-compat-test-03",
              start_epoch: 753,
              end_epoch: -1,
            },
          ]
    timeout-minutes: 720
    permissions:
      # The "id-token: write" permission is required or Machine ID will not be
      # able to authenticate with the cluster.
      id-token: write
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Install Teleport
        uses: teleport-actions/setup@75c810ac63a7e9b28ca4795c6111619f2a13ac71 # pin@v1
        with:
          version: 11.3.1
      - name: Authorize against Teleport
        id: auth
        uses: teleport-actions/auth@9091dad16a564f3c5b9c2ec520b234a4872b6879 # pin@v1
        with:
          # Specify the publically accessible address of your Teleport proxy.
          proxy: proxy.mysten-int.com:443
          # Specify the name of the join token for your bot.
          token: fullnode-compat-test
          # Specify the length of time that the generated credentials should be
          # valid for. This is optional and defaults to "1h"
          certificate-ttl: 12h

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest CI-tagged binary commit hash
        run: echo "CI_COMMIT_HASH=$(git for-each-ref --sort=creatordate refs/tags | grep -E 'sui_v(.*)_ci' | tail -1 | awk '{ print $1 }')" >> $GITHUB_OUTPUT
        id: get-ci-tag

      # Cargo clean and git restore on any left over files from git checkout
      - name: Environment clean
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 5 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && source ~/.cargo/env && cd ~/sui && cargo clean && git restore ."

      - name: Checkout sui repo
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 10 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && source ~/.cargo/env && cd ~/sui && git fetch origin main && git rebase origin/main"

      - name: Fetch sui-node binary
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 30 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && rm -rf /opt/sui/bin && mkdir -p /opt/sui/bin && cd /opt/sui/bin && wget https://sui-releases.s3.us-east-1.amazonaws.com/${{ steps.get-ci-tag.outputs.CI_COMMIT_HASH }}/sui-node && chmod +x sui-node"

      # Wipe database from previous runs
      - name: Wipe SuiDB
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 5 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && sudo rm -rfd /opt/sui/suidb || true"

      - name: Setup DB structure
        if: ${{ (matrix.shard_manifest.start_epoch != 0) }}
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 5 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && mkdir -p /opt/sui/suidb/epoch_${{ matrix.shard_manifest.start_epoch }} && cd /opt/sui/suidb/epoch_${{ matrix.shard_manifest.start_epoch }} && mkdir checkpoints && mkdir epochs && mkdir -p store/perpetual"

      - name: Download epoch snapshot artifacts
        if: ${{ (matrix.shard_manifest.start_epoch != 0) }}
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 60 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && cd /opt/sui/suidb/epoch_${{ matrix.shard_manifest.start_epoch }}/epochs && wget -i /opt/sui/s3_urls/epochs"

      - name: Download checkpoint snapshot artifacts
        if: ${{ (matrix.shard_manifest.start_epoch != 0) }}
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 60 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && cd /opt/sui/suidb/epoch_${{ matrix.shard_manifest.start_epoch }}/checkpoints && wget -i /opt/sui/s3_urls/checkpoints"

      - name: Download perpetual snapshot artifacts
        if: ${{ (matrix.shard_manifest.start_epoch != 0) }}
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 60 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && cd /opt/sui/suidb/epoch_${{ matrix.shard_manifest.start_epoch }}/store/perpetual && wget -i /opt/sui/s3_urls/store_perpetual"

      - name: Mark snapshot as live
        if: ${{ (matrix.shard_manifest.start_epoch != 0) }}
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 5 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && mv /opt/sui/suidb/epoch_${{ matrix.shard_manifest.start_epoch }} /opt/sui/suidb/live"

      - name: Run sync script
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 720 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "source ~/.bashrc && source ~/.cargo/env && cd ~/sui && echo "Running compatibility checker against binary built at commit hash ${{ steps.get-ci-tag.outputs.CI_COMMIT_HASH }}" && CARGO_TERM_COLOR=always ./scripts/compatibility/fullnode-sync.sh -p /opt/sui/bin/sui-node -n testnet -e ${{ matrix.shard_manifest.end_epoch }} ${{ github.event.inputs.verbose == true && '-v' || '' }}"

      # When a job is cancelled, e.g. due to another job in the workflow failing, the job is marked as cancelled and the sync script and sui-node process are
      # orphaned. These remain bound to the sui-node ports, and thus cause the next run attempt to fail. This step kills the orphaned processes. Note that
      # in the fail case, either the monitor script notices that the sui-node is no longer responding to polls, or the monitor script itself fails. In either
      # case, cleanup is run by trapping EXIT
      - name: Cleanup
        if: ${{ cancelled() }}
        run: |
          tsh -i ${{ steps.auth.outputs.identity-file }} --ttl 720 ssh ubuntu@${{ matrix.shard_manifest.hostname }} "pkill .*fullnode; pkill .*sui-node"

  notify:
    name: Notify
    needs: [genesis-sync-test]
    runs-on: ubuntu-latest
    if: always() # always notify

    steps:
      - uses: technote-space/workflow-conclusion-action@v3

      - name: Checkout sui repo main branch
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # pin@v3

      - name: Get sui commit
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export sui_sha=$(git rev-parse HEAD)
          echo "sui_sha=${sui_sha}" >> $GITHUB_ENV

      - name: Get link to logs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh_job_link=$(gh api -X GET 'repos/MystenLabs/sui/actions/runs/${{ github.run_id }}/jobs' --jq '.jobs.[0].html_url')
          echo "gh_job_link=${gh_job_link}" >> $GITHUB_ENV

      - name: Post to slack
        uses: slackapi/slack-github-action@936158bbe252e9a6062e793ea4609642c966e302 # pin@v1.21.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SUI_SHA: ${{ env.sui_sha }}
          GH_JOB_LINK: ${{ env.gh_job_link }}
        with: # TODO fix commit hash below, as we are reunning on last commit that passed CI
          channel-id: "compatibility-test-nightly"
          payload: |
            {
              "text": "*${{ github.workflow }}* workflow status: `${{ env.WORKFLOW_CONCLUSION }}`",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*${{ github.workflow }}* workflow status: `${{ env.WORKFLOW_CONCLUSION }}`"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Sui commit: <https://github.com/MystenLabs/sui/commit/${{ env.SUI_SHA }}|${{ env.SUI_SHA }}> \nRun: <${{ env.GH_JOB_LINK }}|${{ github.run_id }}>"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "To debug failures: See run logs; Rerun with `verbose` logging enabled; `tsh ssh ubuntu@fullnode-compat-test-01` if needed (or -02, -03). \nMetrics can be viewed at https://metrics.sui.io/d/_nu1mWC7zx/sui-fullnode?orgId=1&refresh=1m&var-Environment=mysten-metrics-internal&var-network=testnet&var-host=fullnode-compat-test-01"
                  }
                }
              ]
            }
